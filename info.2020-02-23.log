Starting SellApplication on AFOIG-801172222 with PID 22336 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:24:29 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 10652 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:24:29 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 34.732 seconds (JVM running for 64.382)
Starting SellApplication on AFOIG-801172222 with PID 9896 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:26:04 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tomcatEmbeddedServletContainerFactory' defined in class path resource [org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error at ::0 can't find referenced pointcut verify
Starting SellApplication on AFOIG-801172222 with PID 10656 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:26:21 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tomcatEmbeddedServletContainerFactory' defined in class path resource [org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error at ::0 can't find referenced pointcut verify
Starting SellApplication on AFOIG-801172222 with PID 9528 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:27:08 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tomcatEmbeddedServletContainerFactory' defined in class path resource [org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error at ::0 can't find referenced pointcut verify
Starting SellApplication on AFOIG-801172222 with PID 15468 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:28:29 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tomcatEmbeddedServletContainerFactory' defined in class path resource [org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error at ::0 can't find referenced pointcut verify
Starting SellApplication on AFOIG-801172222 with PID 17848 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:29:42 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 12128 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:29:42 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 25.922 seconds (JVM running for 28.378)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
【登录校验】没有token信息
【登录校验】没有token信息
Starting SellApplication on AFOIG-801172222 with PID 21188 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:38:20 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3877 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:38:20 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.169 seconds (JVM running for 12.349)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 16800 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:41:23 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3368 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:41:23 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.134 seconds (JVM running for 11.067)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 14340 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:49:47 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4787 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 17:49:47 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.66 seconds (JVM running for 14.735)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 9960 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 18:03:43 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3678 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 18:03:43 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.721 seconds (JVM running for 12.326)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 12968 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 18:20:02 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5033 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 18:20:02 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.569 seconds (JVM running for 15.814)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 15620 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 18:25:47 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4482 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 18:25:47 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.662 seconds (JVM running for 16.704)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 16512 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:45:41 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4858 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:45:41 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.17 seconds (JVM running for 18.263)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 13012 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Starting SellApplication on AFOIG-801172222 with PID 21356 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65045a87: startup date [Sun Feb 23 18:55:18 CST 2020]; root of context hierarchy
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:55:18 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 6589 ms
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 6854 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:55:18 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 17.884 seconds (JVM running for 21.076)
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65045a87: startup date [Sun Feb 23 18:55:18 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Pausing ProtocolHandler ["http-nio-8080"]
Stopping service Tomcat
The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
Stopping ProtocolHandler ["http-nio-8080"]
Destroying ProtocolHandler ["http-nio-8080"]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65045a87: startup date [Sun Feb 23 18:55:18 CST 2020]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
Starting SellApplication on AFOIG-801172222 with PID 22432 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:57:57 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5636 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:57:57 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.737 seconds (JVM running for 16.289)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 10876 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:59:41 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4353 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8297b3a: startup date [Sun Feb 23 18:59:41 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.802 seconds (JVM running for 15.662)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 55 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 3592 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:01:18 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3343 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:01:18 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.8 seconds (JVM running for 12.436)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 1828 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:27:35 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4112 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:27:35 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.761 seconds (JVM running for 13.441)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 8960 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:28:47 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5043 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:28:47 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.604 seconds (JVM running for 15.393)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 10832 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:30:35 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4494 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:30:35 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.915 seconds (JVM running for 14.5)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 19260 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:38:05 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3926 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:38:05 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.714 seconds (JVM running for 13.044)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 15460 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:39:53 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5288 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Starting SellApplication on AFOIG-801172222 with PID 21272 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:40:09 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4380 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:40:09 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.833 seconds (JVM running for 14.398)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 11180 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:55:10 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 15080 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:55:10 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 42.069 seconds (JVM running for 49.65)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 12932 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:59:40 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2978 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 19:59:40 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 8.077 seconds (JVM running for 10.401)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 12648 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:02:11 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3045 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:02:11 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.92 seconds (JVM running for 9.817)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
Starting SellApplication on AFOIG-801172222 with PID 11300 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:08:42 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2550 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:08:42 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.458 seconds (JVM running for 9.318)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "{page}"
Starting SellApplication on AFOIG-801172222 with PID 8012 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:14:10 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5824 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:14:10 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.665 seconds (JVM running for 15.594)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
Starting SellApplication on AFOIG-801172222 with PID 5356 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:18:10 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4523 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:18:10 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.309 seconds (JVM running for 13.28)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
Starting SellApplication on AFOIG-801172222 with PID 2804 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:19:33 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2531 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:19:33 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.14 seconds (JVM running for 8.786)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
Starting SellApplication on AFOIG-801172222 with PID 1996 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:21:34 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5353 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:21:34 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.406 seconds (JVM running for 15.349)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 1376 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:22:22 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3122 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:22:22 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 8.898 seconds (JVM running for 11.098)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
Starting SellApplication on AFOIG-801172222 with PID 11596 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:23:08 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3652 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:23:08 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.353 seconds (JVM running for 12.3)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
Starting SellApplication on AFOIG-801172222 with PID 6332 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:26:08 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2609 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fa4c865: startup date [Sun Feb 23 20:26:08 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.351 seconds (JVM running for 9.853)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
【websocket消息】广播消息, message=1582460794878464547
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
【websocket消息】广播消息, message=1582460801017516566
