Starting ProductcategoryMapperTest on AFOIG-801172222 with PID 16572 (started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4ef74c30: startup date [Wed Mar 11 21:54:40 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 0 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 8575 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4ef74c30: startup date [Wed Mar 11 21:54:40 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Initializing ProtocolHandler ["http-nio-auto-1"]
Starting ProtocolHandler ["http-nio-auto-1"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 52410 (http)
Started ProductcategoryMapperTest in 21.439 seconds (JVM running for 25.396)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4ef74c30: startup date [Wed Mar 11 21:54:40 CST 2020]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting SellApplication on AFOIG-801172222 with PID 16776 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63475ace: startup date [Wed Mar 11 21:56:14 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3948 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63475ace: startup date [Wed Mar 11 21:56:14 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.456 seconds (JVM running for 12.405)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】有新的连接, 总数:1
【websocket消息】连接断开, 总数:0
【websocket消息】有新的连接, 总数:1
Starting SellApplication on AFOIG-801172222 with PID 6224 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61e94def: startup date [Wed Mar 11 21:57:28 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3895 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61e94def: startup date [Wed Mar 11 21:57:28 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.899 seconds (JVM running for 21.596)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 11724 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:01:11 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5104 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:01:11 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 17.005 seconds (JVM running for 20.368)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 93 ms
Starting SellApplication on AFOIG-801172222 with PID 5932 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63475ace: startup date [Wed Mar 11 22:01:58 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3115 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63475ace: startup date [Wed Mar 11 22:01:58 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 8.754 seconds (JVM running for 11.053)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 18784 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:02:51 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3736 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:02:51 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.367 seconds (JVM running for 14.981)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 20632 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b068087: startup date [Wed Mar 11 22:17:59 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4813 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b068087: startup date [Wed Mar 11 22:17:59 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.631 seconds (JVM running for 17.152)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 20488 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:18:27 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5117 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:18:27 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.847 seconds (JVM running for 17.555)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 18404 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b068087: startup date [Wed Mar 11 22:20:47 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5358 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b068087: startup date [Wed Mar 11 22:20:47 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 16.603 seconds (JVM running for 19.725)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 2404 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:21:48 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4808 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:21:48 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.423 seconds (JVM running for 17.057)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 10064 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:23:01 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4374 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:23:01 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.39 seconds (JVM running for 17.228)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 9044 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:23:52 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4612 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f152006: startup date [Wed Mar 11 22:23:52 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.781 seconds (JVM running for 18.837)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 54 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on AFOIG-801172222 with PID 22168 (C:\Users\Administrator\Documents\sell\target\classes started by Administrator in C:\Users\Administrator\Documents\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63475ace: startup date [Wed Mar 11 22:25:15 CST 2020]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface sell.repositor.ProductCategoryRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3307 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63475ace: startup date [Wed Mar 11 22:25:15 CST 2020]; root of context hierarchy
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminCategoryController.save(sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.save(sell.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OffSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.AdminProductController.OnSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> sell.crotroller.BuyerOrderController.create(sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public sell.VO.ResultVO<java.util.List<sell.dto.OrderDTO>> sell.crotroller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[GET]}" onto public sell.VO.ResultVO<sell.dto.OrderDTO> sell.crotroller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public sell.VO.ResultVO sell.crotroller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.PayContontroller.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String sell.crotroller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView sell.crotroller.SellInfoController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String sell.crotroller.WechartController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void sell.crotroller.WexinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.004 seconds (JVM running for 11.21)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
HHH000397: Using ASTQueryTranslatorFactory
